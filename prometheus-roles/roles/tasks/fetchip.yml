---
- name: Fetch All EC2 Public IPs and Names from AWS
  shell: |
    aws ec2 describe-instances \
    --filters "Name=instance-state-name,Values=running" \
    --query "Reservations[].Instances[].[Tags[?Key=='Name']|[0].Value, PublicIpAddress]" \
    --output text --region us-east-1
  register: ec2_output
  become: no
  run_once: true
  delegate_to: localhost

- name: Debug - Print fetched EC2 instances
  debug:
    msg: "{{ ec2_output.stdout_lines }}"

- name: Set EC2 Instances Fact
  set_fact:
    ec2_instances: "{{ ec2_output.stdout_lines | select('!=', '') | list | unique }}"

# Store fetched IPs in a file for Prometheus to read
- name: Create directory for Prometheus target files
  file:
    path: /etc/prometheus
    state: directory
    mode: '0755'

- name: Write EC2 instances to a file
  copy:
    content: |
      {{ ec2_instances | map('join', ' ') | join('\n') }}
    dest: /etc/prometheus/ec2_targets.txt
    mode: '0644'

# Systemd unit to run fetchip.yml every minute
- name: Create systemd service file
  copy:
    dest: /etc/systemd/system/fetchip.service
    content: |
      [Unit]
      Description=Fetch EC2 IPs for Prometheus
      After=network.target

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/ansible-playbook /path/to/fetchip.yml
      RemainAfterExit=true

      [Install]
      WantedBy=multi-user.target

- name: Create systemd timer file
  copy:
    dest: /etc/systemd/system/fetchip.timer
    content: |
      [Unit]
      Description=Run fetchip service every minute

      [Timer]
      OnBootSec=1min
      OnUnitActiveSec=1min
      Unit=fetchip.service

      [Install]
      WantedBy=timers.target

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Enable and start systemd timer
  systemd:
    name: fetchip.timer
    enabled: yes
    state: started
